import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from forecast import prepare_data, forecast_demand

# –ù–∞—Å—Ç—Ä–æ–∏–º —Å—Ç–∏–ª—å –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
sns.set(style="whitegrid")

st.title("üì¶ –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞–º–∏")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö", type="csv")

if uploaded_file:
    df = pd.read_csv(uploaded_file)
    df['date'] = pd.to_datetime(df['date'])

    # –í—ã–±–æ—Ä SKU
    skus = df['sku'].unique()
    sku_selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ SKU", skus)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
    forecast_period = st.selectbox("–ù–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥ –ø—Ä–æ–≥–Ω–æ–∑?", [7, 14, 30])
    lead_time = st.number_input("‚è≥ –õ–∞–≥ –ø–æ—Å—Ç–∞–≤–∫–∏ (–¥–Ω–µ–π)", min_value=0, max_value=60, value=2)
    stock_on_hand = st.number_input("üì¶ –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ", min_value=0, value=30)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    df_prepared = prepare_data(df, sku_selected)

    # –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞
    forecast = forecast_demand(df_prepared, forecast_period)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
    st.subheader("üîÆ –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞:")
    st.dataframe(forecast.tail(forecast_period).reset_index(drop=True))

    # –ì—Ä–∞—Ñ–∏–∫: –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ —Å –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
    fig, ax = plt.subplots(figsize=(10, 6))

    # –û—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥–Ω–æ–∑–∞ (yhat)
    ax.plot(forecast['ds'], forecast['yhat'], label='–ü—Ä–æ–≥–Ω–æ–∑', color='blue', linewidth=2)

    # –î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (yhat_lower, yhat_upper)
    ax.fill_between(forecast['ds'], forecast['yhat_lower'], forecast['yhat_upper'], color='blue', alpha=0.2, label='–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–≤–µ—Ä–∏—è')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞
    ax.set_title(f"–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –¥–ª—è {sku_selected} –Ω–∞ {forecast_period} –¥–Ω–µ–π", fontsize=16)
    ax.set_xlabel("–î–∞—Ç–∞", fontsize=12)
    ax.set_ylabel("–ü—Ä–æ–¥–∞–∂–∏", fontsize=12)
    ax.legend()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    st.pyplot(fig)

    # –ì—Ä–∞—Ñ–∏–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: —Ç—Ä–µ–Ω–¥ –∏ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å
    st.subheader("üåü –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≥–Ω–æ–∑–∞")

    fig2, ax2 = plt.subplots(figsize=(10, 6))
    ax2.plot(forecast['ds'], forecast['yhat'], label='–¢—Ä–µ–Ω–¥ (yhat)', color='blue', linewidth=2)
    ax2.fill_between(forecast['ds'], forecast['yhat_lower'], forecast['yhat_upper'], alpha=0.2, label='–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–≤–µ—Ä–∏—è')

    ax2.set_title("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–≥–Ω–æ–∑–∞ (–¢—Ä–µ–Ω–¥ –∏ –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã)", fontsize=16)
    ax2.set_xlabel("–î–∞—Ç–∞", fontsize=12)
    ax2.set_ylabel("–ü—Ä–æ–¥–∞–∂–∏", fontsize=12)
    ax2.legend()

    st.pyplot(fig2)

    # –ó–∞–∫—É–ø–∫–∞: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–∫–∞–∑—É
    total_forecasted_demand = forecast.tail(forecast_period)['yhat'].sum()
    reorder_point = forecast.head(lead_time)['yhat'].sum()
    recommended_order = max(0, total_forecasted_demand - stock_on_hand)

    st.markdown("---")
    st.subheader("üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    st.markdown(f"**–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –Ω–∞ {forecast_period} –¥–Ω–µ–π:** `{total_forecasted_demand:.1f}` –µ–¥.")
    st.markdown(f"**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–∫–∞–∑–∞—Ç—å:** `{recommended_order:.1f}` –µ–¥. (—É—á—Ç—ë–Ω —Ç–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {stock_on_hand}, –ª–∞–≥: {lead_time} –¥–Ω)")
