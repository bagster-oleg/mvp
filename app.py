import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from forecast import prepare_data, forecast_demand

st.title("üì¶ –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞–º–∏")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö", type="csv")

if uploaded_file:
    df = pd.read_csv(uploaded_file)
    df['date'] = pd.to_datetime(df['date'])

    # –í—ã–±–æ—Ä SKU
    skus = df['sku'].unique()
    sku_selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ SKU", skus)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
    forecast_period = st.selectbox("–ù–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥ –ø—Ä–æ–≥–Ω–æ–∑?", [7, 14, 30])
    lead_time = st.number_input("‚è≥ –õ–∞–≥ –ø–æ—Å—Ç–∞–≤–∫–∏ (–¥–Ω–µ–π)", min_value=0, max_value=60, value=2)
    stock_on_hand = st.number_input("üì¶ –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ", min_value=0, value=30)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    df_prepared = prepare_data(df, sku_selected)

    # –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞
    forecast = forecast_demand(df_prepared, forecast_period)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
    st.subheader("üîÆ –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞:")
    st.dataframe(forecast.tail(forecast_period).reset_index(drop=True))

    # –û–±—Ä–µ–∑–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω—É–∂–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    forecast_display = forecast.tail(forecast_period)

    fig, ax = plt.subplots(figsize=(10, 6))

    # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    ax.plot(forecast_display['ds'], forecast_display['yhat'], label='–ü—Ä–æ–≥–Ω–æ–∑', color='blue', linewidth=2)
    # –î–æ–±–∞–≤—å –≤ –≥—Ä–∞—Ñ–∏–∫ –ª–∏–Ω–∏—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–¥–∞–∂:
    ax.plot(df_prepared['ds'], df_prepared['y'], label='–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥–∞–∂–∏', color='gray', linestyle='--')

    ax.fill_between(forecast_display['ds'], forecast_display['yhat_lower'], forecast_display['yhat_upper'], color='blue', alpha=0.2, label='–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–≤–µ—Ä–∏—è')

    ax.set_title(f"–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –¥–ª—è {sku_selected} –Ω–∞ {forecast_period} –¥–Ω–µ–π", fontsize=16)
    ax.set_xlabel("–î–∞—Ç–∞", fontsize=12)
    ax.set_ylabel("–ü—Ä–æ–¥–∞–∂–∏", fontsize=12)
    ax.legend()

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç –Ω–∞ –æ—Å–∏ X
    ax.xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%Y-%m-%d'))
    fig.autofmt_xdate()

    st.pyplot(fig)


    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞
    ax.set_title(f"–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –¥–ª—è {sku_selected} –Ω–∞ {forecast_period} –¥–Ω–µ–π", fontsize=16)
    ax.set_xlabel("–î–∞—Ç–∞", fontsize=12)
    ax.set_ylabel("–ü—Ä–æ–¥–∞–∂–∏", fontsize=12)
    ax.legend()

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –¥–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ –æ—Å–∏ x
    ax.xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%Y-%m-%d'))
    fig.autofmt_xdate()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–∫–ª–æ–Ω–∞ –¥–∞—Ç

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    st.pyplot(fig)

    # –ó–∞–∫—É–ø–∫–∞: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–∫–∞–∑—É
    total_forecasted_demand = forecast.tail(forecast_period)['yhat'].sum()
    reorder_point = forecast.head(lead_time)['yhat'].sum()
    recommended_order = max(0, total_forecasted_demand - stock_on_hand)

    st.markdown("---")
    st.subheader("üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    st.markdown(f"**–ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞ –Ω–∞ {forecast_period} –¥–Ω–µ–π:** `{total_forecasted_demand:.1f}` –µ–¥.")
    st.markdown(f"**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–∫–∞–∑–∞—Ç—å:** `{recommended_order:.1f}` –µ–¥. (—É—á—Ç—ë–Ω —Ç–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {stock_on_hand}, –ª–∞–≥: {lead_time} –¥–Ω)")
    st.info("üìò *–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–≤–µ—Ä–∏—è* ‚Äî —ç—Ç–æ –¥–∏–∞–ø–∞–∑–æ–Ω, –≤ –∫–æ—Ç–æ—Ä—ã–π —Å –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø–æ–ø–∞–¥—ë—Ç —Å–ø—Ä–æ—Å. –ù–∞–ø—Ä–∏–º–µ—Ä, 80% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.")
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ (CSV)", forecast_display.to_csv(index=False), "forecast.csv", "text/csv")
